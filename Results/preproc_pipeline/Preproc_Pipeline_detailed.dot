digraph structs {
node [shape=record];
scaffoldflowinfosource [label="{IN}|{ infosource | utility |  }|{OUT|<outsubjectid> subject_id}"];
scaffoldflowselectfiles [label="{IN|<insubjectid> subject_id}|{ selectfiles | io |  }|{OUT|<outanat> anat|<outfunc> func}"];
scaffoldflowStructural [label="{IN|<inBrainExtractioninfile> BrainExtraction.in_file}|{ Structural |  |  }|{OUT|<outBrainExtractionmaskfile> BrainExtraction.mask_file|<outBrainExtractionoutfile> BrainExtraction.out_file|<outErosionCSFoutfile> ErosionCSF.out_file|<outErosionWMoutfile> ErosionWM.out_file|<outNormGMnormalizedfiles> NormGM.normalized_files|<outSegmentationrestoredimage> Segmentation.restored_image|<outSegmentationtissueclassfiles> Segmentation.tissue_class_files}"];
scaffoldflowFunctional [label="{IN|<inCoregistrationtarget> Coregistration.target|<inNormalizationsource> Normalization.source|<inVolumeRemovalinfile> VolumeRemoval.in_file}|{ Functional |  |  }|{OUT|<outArtifactDetectiondisplacementfiles> ArtifactDetection.displacement_files|<outArtifactDetectionoutlierfiles> ArtifactDetection.outlier_files|<outArtifactDetectionplotfiles> ArtifactDetection.plot_files|<outCoregistrationcoregisteredfiles> Coregistration.coregistered_files|<outNormalizationnormalizationparameters> Normalization.normalization_parameters|<outNormalizationnormalizedfiles> Normalization.normalized_files|<outNormalizationnormalizedsource> Normalization.normalized_source|<outRealignmentmeanimage> Realignment.mean_image|<outRealignmentrealignedfiles> Realignment.realigned_files|<outRealignmentrealignmentparameters> Realignment.realignment_parameters|<outVolumeRemovalroifile> VolumeRemoval.roi_file}"];
scaffoldflowDenoising [label="{IN|<inCSFRegmaskfiles> CSFReg.mask_files|<inCSFRegrealignedfile> CSFReg.realigned_file|<inDesignMatoutliers> DesignMat.outliers|<inDetrendmask> Detrend.mask|<inDetrendoutliers> Detrend.outliers|<inGLMmask> GLM.mask|<inMotionRegmotionparams> MotionReg.motion_params|<inMotionRegoutliers> MotionReg.outliers|<inSmoothinginfiles> Smoothing.in_files|<inWMRegmaskfiles> WMReg.mask_files|<inWMRegrealignedfile> WMReg.realigned_file}|{ Denoising |  |  }|{OUT|<outBPFoutfile> BPF.out_file|<outDesignMatfiledir> DesignMat.file_dir|<outGLMoutfile> GLM.out_file|<outGLMoutres> GLM.out_res|<outSmoothingsmoothedfiles> Smoothing.smoothed_files}"];
scaffoldflowdatasink [label="{IN|<inARTdisplacement> ART.@displacement|<inARToutliers> ART.@outliers|<inARToutliersimg> ART.@outliers_img|<inBETbrain> BET.@brain|<inBETmask> BET.@mask|<inBPFfinal> BPF.@final|<inCoregistrationcoreg> Coregistration.@coreg|<inDesignMatrixdesmat> DesignMatrix.@desmat|<inGLMResultsbetas> GLM_Results.@betas|<inGLMResultsres> GLM_Results.@res|<inNormalizationcsf> Normalization.@csf|<inNormalizationfiles> Normalization.@files|<inNormalizationgm> Normalization.@gm|<inNormalizationparams> Normalization.@params|<inNormalizationsource> Normalization.@source|<inNormalizationwm> Normalization.@wm|<inRealignmentmean> Realignment.@mean|<inRealignmentparam> Realignment.@param|<inRealignmentrafiles> Realignment.@ra_files|<inSegmentationbiascorrected> Segmentation.@bias_corrected|<inSegmentationmasks> Segmentation.@masks|<inSmoothingsmoothed> Smoothing.@smoothed|<inVolumeRemovalfile> VolumeRemoval.@file|<incontainer> container}|{ datasink | io |  }|{OUT|<outoutfile> out_file}"];
scaffoldflowROI_Time_Extraction [label="{IN|<inimg> img|<insubid> sub_id}|{ ROI_Time_Extraction | utility |  }|{OUT|<outfiledir> file_dir}"];
scaffoldflowTmp_File_Rmv [label="{IN|<indsink> dsink|<infiledir> file_dir|<insubjid> subj_id}|{ Tmp_File_Rmv | utility |  }|{OUT}"];
scaffoldflowDenoising:outBPFoutfile:e -> scaffoldflowROI_Time_Extraction:inimg:w;
scaffoldflowDenoising:outBPFoutfile:e -> scaffoldflowdatasink:inBPFfinal:w;
scaffoldflowDenoising:outDesignMatfiledir:e -> scaffoldflowdatasink:inDesignMatrixdesmat:w;
scaffoldflowDenoising:outGLMoutfile:e -> scaffoldflowdatasink:inGLMResultsbetas:w;
scaffoldflowDenoising:outGLMoutres:e -> scaffoldflowdatasink:inGLMResultsres:w;
scaffoldflowDenoising:outSmoothingsmoothedfiles:e -> scaffoldflowdatasink:inSmoothingsmoothed:w;
scaffoldflowFunctional:outArtifactDetectiondisplacementfiles:e -> scaffoldflowdatasink:inARTdisplacement:w;
scaffoldflowFunctional:outArtifactDetectionoutlierfiles:e -> scaffoldflowDenoising:inDesignMatoutliers:w;
scaffoldflowFunctional:outArtifactDetectionoutlierfiles:e -> scaffoldflowDenoising:inDetrendoutliers:w;
scaffoldflowFunctional:outArtifactDetectionoutlierfiles:e -> scaffoldflowDenoising:inMotionRegoutliers:w;
scaffoldflowFunctional:outArtifactDetectionoutlierfiles:e -> scaffoldflowdatasink:inARToutliers:w;
scaffoldflowFunctional:outArtifactDetectionplotfiles:e -> scaffoldflowdatasink:inARToutliersimg:w;
scaffoldflowFunctional:outCoregistrationcoregisteredfiles:e -> scaffoldflowdatasink:inCoregistrationcoreg:w;
scaffoldflowFunctional:outNormalizationnormalizationparameters:e -> scaffoldflowdatasink:inNormalizationparams:w;
scaffoldflowFunctional:outNormalizationnormalizedfiles:e -> scaffoldflowDenoising:inCSFRegrealignedfile:w;
scaffoldflowFunctional:outNormalizationnormalizedfiles:e -> scaffoldflowDenoising:inSmoothinginfiles:w;
scaffoldflowFunctional:outNormalizationnormalizedfiles:e -> scaffoldflowDenoising:inWMRegrealignedfile:w;
scaffoldflowFunctional:outNormalizationnormalizedfiles:e -> scaffoldflowdatasink:inNormalizationfiles:w;
scaffoldflowFunctional:outNormalizationnormalizedsource:e -> scaffoldflowdatasink:inNormalizationsource:w;
scaffoldflowFunctional:outRealignmentmeanimage:e -> scaffoldflowdatasink:inRealignmentmean:w;
scaffoldflowFunctional:outRealignmentrealignedfiles:e -> scaffoldflowdatasink:inRealignmentrafiles:w;
scaffoldflowFunctional:outRealignmentrealignmentparameters:e -> scaffoldflowDenoising:inMotionRegmotionparams:w;
scaffoldflowFunctional:outRealignmentrealignmentparameters:e -> scaffoldflowdatasink:inRealignmentparam:w;
scaffoldflowFunctional:outVolumeRemovalroifile:e -> scaffoldflowdatasink:inVolumeRemovalfile:w;
scaffoldflowROI_Time_Extraction:outfiledir:e -> scaffoldflowTmp_File_Rmv:infiledir:w;
scaffoldflowStructural:outBrainExtractionmaskfile:e -> scaffoldflowdatasink:inBETmask:w;
scaffoldflowStructural:outBrainExtractionoutfile:e -> scaffoldflowdatasink:inBETbrain:w;
scaffoldflowStructural:outErosionCSFoutfile:e -> scaffoldflowDenoising:inCSFRegmaskfiles:w;
scaffoldflowStructural:outErosionCSFoutfile:e -> scaffoldflowdatasink:inNormalizationcsf:w;
scaffoldflowStructural:outErosionWMoutfile:e -> scaffoldflowDenoising:inWMRegmaskfiles:w;
scaffoldflowStructural:outErosionWMoutfile:e -> scaffoldflowdatasink:inNormalizationwm:w;
scaffoldflowStructural:outNormGMnormalizedfiles:e -> scaffoldflowDenoising:inDetrendmask:w;
scaffoldflowStructural:outNormGMnormalizedfiles:e -> scaffoldflowDenoising:inGLMmask:w;
scaffoldflowStructural:outNormGMnormalizedfiles:e -> scaffoldflowdatasink:inNormalizationgm:w;
scaffoldflowStructural:outSegmentationrestoredimage:e -> scaffoldflowFunctional:inCoregistrationtarget:w;
scaffoldflowStructural:outSegmentationrestoredimage:e -> scaffoldflowFunctional:inNormalizationsource:w;
scaffoldflowStructural:outSegmentationrestoredimage:e -> scaffoldflowdatasink:inSegmentationbiascorrected:w;
scaffoldflowStructural:outSegmentationtissueclassfiles:e -> scaffoldflowdatasink:inSegmentationmasks:w;
scaffoldflowdatasink:outoutfile:e -> scaffoldflowTmp_File_Rmv:indsink:w;
scaffoldflowinfosource:outsubjectid:e -> scaffoldflowROI_Time_Extraction:insubid:w;
scaffoldflowinfosource:outsubjectid:e -> scaffoldflowTmp_File_Rmv:insubjid:w;
scaffoldflowinfosource:outsubjectid:e -> scaffoldflowdatasink:incontainer:w;
scaffoldflowinfosource:outsubjectid:e -> scaffoldflowselectfiles:insubjectid:w;
scaffoldflowselectfiles:outanat:e -> scaffoldflowStructural:inBrainExtractioninfile:w;
scaffoldflowselectfiles:outfunc:e -> scaffoldflowFunctional:inVolumeRemovalinfile:w;
}